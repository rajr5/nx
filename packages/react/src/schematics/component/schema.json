{
  "$schema": "http://json-schema.org/schema",
  "id": "NxReactApp",
  "title": "Create a React Application for Nx",
  "type": "object",
  "properties": {
    "project": {
      "type": "string",
      "description": "The name of the project.",
      "$default": {
        "$source": "projectName"
      },
      "x-prompt": "What is the name of the project for this component?"
    },
    "name": {
      "type": "string",
      "description": "The name of the component.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the component?"
    },
    "style": {
      "description": "The file extension to be used for style files.",
      "type": "string",
      "default": "css",
      "x-prompt": {
        "message": "Which stylesheet format would you like to use?",
        "type": "list",
        "items": [
          { "value": "css", "label": "CSS" },
          {
            "value": "scss",
            "label": "SASS(.scss)       [ http://sass-lang.com          ]"
          },
          {
            "value": "styl",
            "label": "Stylus(.styl)     [ http://stylus-lang.com        ]"
          },
          {
            "value": "less",
            "label": "LESS              [ http://lesscss.org            ]"
          },
          {
            "value": "styled-components",
            "label": "styled-components [ https://styled-components.com ]"
          },
          {
            "value": "@emotion/styled",
            "label": "emotion           [ https://emotion.sh            ]"
          }
        ]
      }
    },
    "skipTests": {
      "type": "boolean",
      "description": "When true, does not create \"spec.ts\" test files for the new component.",
      "default": false
    },
    "export": {
      "type": "boolean",
      "default": false,
      "description": "When true, the component is exported from the project index.ts (if it exists).",
      "x-prompt": "Should this component be exported in the project?"
    },
    "pascalCaseFiles": {
      "type": "boolean",
      "description": "Use pascal case component file name (e.g. App.tsx)",
      "default": false
    },
    "classComponent": {
      "type": "boolean",
      "description": "Use class components instead of functional component",
      "default": false
    },
    "routing": {
      "type": "boolean",
      "description": "Generate library with routes"
    }
  },
  "required": ["name", "project"]
}
