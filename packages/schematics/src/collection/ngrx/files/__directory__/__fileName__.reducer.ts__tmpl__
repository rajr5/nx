import { <%= className %>Action, <%= className %>ActionTypes } from './<%= fileName %>.actions';

/**
 * Interface for the '<%= className %>' data used in
 *  - <%= className %>State, and
 *  - <%= propertyName %>Reducer
 *
 *  Note: remove if already defined in another module
 */
export interface <%= className %> {
}

export interface <%= className %>State {
  list        : <%= className %>[];   // analogous to a sql normalized table
  loaded      : boolean;              // has the <%= className %> list been loaded
  selectedId ?: string | number;      // which <%= className %> record has been selected
  error      ?: any;                  // last none error (if any)
};

export const initialState: <%= className %>State = {
  list : [ ],
  loaded : false
};

export function <%= propertyName %>Reducer(
  state: <%= className %>State = initialState, 
  action: <%= className %>Action): <%= className %>State
{
  switch (action.type) {
    case <%= className %>ActionTypes.<%= className %>Loaded: {
      state = {
        ...state,
        list  : action.payload,
        loaded: true
      };
      break;
    }
  }
  return state;
}
