// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 1`] = `
Object {
  "dependencies": Object {},
  "devDependencies": Object {
    "codelyzer": "latest",
    "tslint": "latest",
  },
  "name": "test-name",
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 2`] = `
Object {
  "generators": Object {
    "@nrwl/angular": Object {
      "application": Object {
        "linter": "tslint",
      },
      "library": Object {
        "linter": "tslint",
      },
    },
  },
  "projects": Object {
    "foo": Object {
      "generators": Object {
        "@nrwl/angular:application": Object {
          "e2eTestRunner": "cypress",
          "linter": "eslint",
          "unitTestRunner": "jest",
        },
        "@nrwl/angular:library": Object {
          "linter": "tslint",
        },
      },
      "projectType": "application",
      "root": "apps/foo",
      "targets": Object {
        "lint": Object {
          "executor": "@angular-devkit/build-angular:tslint",
          "options": Object {
            "exclude": Array [
              "**/node_modules/**",
              "!apps/foo/**/*",
            ],
            "tsConfig": Array [
              "apps/foo/tsconfig.app.json",
            ],
          },
        },
      },
    },
  },
  "version": 1,
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 3`] = `
Object {
  "dependencies": Object {},
  "devDependencies": Object {},
  "name": "test-name",
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove all relevant traces of TSLint from the workspace 4`] = `
Object {
  "projects": Object {
    "foo": Object {
      "generators": Object {
        "@nrwl/angular:application": Object {
          "e2eTestRunner": "cypress",
          "unitTestRunner": "jest",
        },
      },
      "projectType": "application",
      "root": "apps/foo",
      "targets": Object {
        "lint": Object {
          "executor": "@angular-devkit/build-angular:tslint",
          "options": Object {
            "exclude": Array [
              "**/node_modules/**",
              "!apps/foo/**/*",
            ],
            "tsConfig": Array [
              "apps/foo/tsconfig.app.json",
            ],
          },
        },
      },
    },
  },
  "version": 1,
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove the entry in generators for convert-tslint-to-eslint because it is no longer needed 1`] = `
Object {
  "generators": Object {
    "@nrwl/angular": Object {
      "convert-tslint-to-eslint": Object {
        "removeTSLintIfNoMoreTSLintTargets": true,
      },
    },
  },
  "projects": Object {
    "foo": Object {
      "generators": Object {
        "@nrwl/angular:application": Object {
          "e2eTestRunner": "cypress",
          "linter": "eslint",
          "unitTestRunner": "jest",
        },
        "@nrwl/angular:library": Object {
          "linter": "tslint",
        },
      },
      "projectType": "application",
      "root": "apps/foo",
      "targets": Object {
        "lint": Object {
          "executor": "@angular-devkit/build-angular:tslint",
          "options": Object {
            "exclude": Array [
              "**/node_modules/**",
              "!apps/foo/**/*",
            ],
            "tsConfig": Array [
              "apps/foo/tsconfig.app.json",
            ],
          },
        },
      },
    },
  },
  "version": 1,
}
`;

exports[`ProjectConverter removeTSLintFromWorkspace() should remove the entry in generators for convert-tslint-to-eslint because it is no longer needed 2`] = `
Object {
  "projects": Object {
    "foo": Object {
      "generators": Object {
        "@nrwl/angular:application": Object {
          "e2eTestRunner": "cypress",
          "unitTestRunner": "jest",
        },
      },
      "projectType": "application",
      "root": "apps/foo",
      "targets": Object {
        "lint": Object {
          "executor": "@angular-devkit/build-angular:tslint",
          "options": Object {
            "exclude": Array [
              "**/node_modules/**",
              "!apps/foo/**/*",
            ],
            "tsConfig": Array [
              "apps/foo/tsconfig.app.json",
            ],
          },
        },
      },
    },
  },
  "version": 1,
}
`;

exports[`ProjectConverter setDefaults() should set the default configuration for removeTSLintIfNoMoreTSLintTargets in workspace.json 1`] = `
Object {
  "generators": Object {
    "@nrwl/angular": Object {
      "application": Object {
        "linter": "tslint",
      },
      "library": Object {
        "linter": "tslint",
      },
    },
  },
  "projects": Object {
    "foo": Object {
      "generators": Object {
        "@nrwl/angular:application": Object {
          "e2eTestRunner": "cypress",
          "linter": "eslint",
          "unitTestRunner": "jest",
        },
        "@nrwl/angular:library": Object {
          "linter": "tslint",
        },
      },
      "projectType": "application",
      "root": "apps/foo",
      "targets": Object {
        "lint": Object {
          "executor": "@angular-devkit/build-angular:tslint",
          "options": Object {
            "exclude": Array [
              "**/node_modules/**",
              "!apps/foo/**/*",
            ],
            "tsConfig": Array [
              "apps/foo/tsconfig.app.json",
            ],
          },
        },
      },
    },
  },
  "version": 1,
}
`;

exports[`ProjectConverter setDefaults() should set the default configuration for removeTSLintIfNoMoreTSLintTargets in workspace.json 2`] = `
Object {
  "generators": Object {
    "@nrwl/angular": Object {
      "application": Object {
        "linter": "tslint",
      },
      "convert-tslint-to-eslint": Object {
        "removeTSLintIfNoMoreTSLintTargets": true,
      },
      "library": Object {
        "linter": "tslint",
      },
    },
  },
  "projects": Object {
    "foo": Object {
      "generators": Object {
        "@nrwl/angular:application": Object {
          "e2eTestRunner": "cypress",
          "linter": "eslint",
          "unitTestRunner": "jest",
        },
        "@nrwl/angular:library": Object {
          "linter": "tslint",
        },
      },
      "projectType": "application",
      "root": "apps/foo",
      "targets": Object {
        "lint": Object {
          "executor": "@angular-devkit/build-angular:tslint",
          "options": Object {
            "exclude": Array [
              "**/node_modules/**",
              "!apps/foo/**/*",
            ],
            "tsConfig": Array [
              "apps/foo/tsconfig.app.json",
            ],
          },
        },
      },
    },
  },
  "version": 1,
}
`;

exports[`ProjectConverter setDefaults() should set the default configuration for removeTSLintIfNoMoreTSLintTargets in workspace.json 3`] = `
Object {
  "generators": Object {
    "@nrwl/angular": Object {
      "application": Object {
        "linter": "tslint",
      },
      "convert-tslint-to-eslint": Object {
        "removeTSLintIfNoMoreTSLintTargets": false,
      },
      "library": Object {
        "linter": "tslint",
      },
    },
  },
  "projects": Object {
    "foo": Object {
      "generators": Object {
        "@nrwl/angular:application": Object {
          "e2eTestRunner": "cypress",
          "linter": "eslint",
          "unitTestRunner": "jest",
        },
        "@nrwl/angular:library": Object {
          "linter": "tslint",
        },
      },
      "projectType": "application",
      "root": "apps/foo",
      "targets": Object {
        "lint": Object {
          "executor": "@angular-devkit/build-angular:tslint",
          "options": Object {
            "exclude": Array [
              "**/node_modules/**",
              "!apps/foo/**/*",
            ],
            "tsConfig": Array [
              "apps/foo/tsconfig.app.json",
            ],
          },
        },
      },
    },
  },
  "version": 1,
}
`;

exports[`ProjectConverter should throw if --dry-run is set 1`] = `
"NOTE: This generator does not support --dry-run. If you are running this in Nx Console, it should execute fine once you hit the \\"Run\\" button.
"
`;

exports[`ProjectConverter should throw if --dryRun is set 1`] = `
"NOTE: This generator does not support --dry-run. If you are running this in Nx Console, it should execute fine once you hit the \\"Run\\" button.
"
`;

exports[`ProjectConverter should throw if -d is set 1`] = `
"NOTE: This generator does not support --dry-run. If you are running this in Nx Console, it should execute fine once you hit the \\"Run\\" button.
"
`;

exports[`ProjectConverter should throw if no project tslint.json is found 1`] = `"We could not find a tslint.json for the selected project \\"apps/foo/tslint.json\\", maybe you have already migrated to ESLint?"`;

exports[`ProjectConverter should throw if no root tslint.json is found 1`] = `"We could not find a tslint.json at the root of your workspace, maybe you have already migrated to ESLint?"`;
