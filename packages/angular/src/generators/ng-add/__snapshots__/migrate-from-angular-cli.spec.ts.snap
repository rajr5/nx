// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`workspace --preserve-angular-cli-layout should create nx.json 1`] = `
Object {
  "affected": Object {
    "defaultBase": "main",
  },
  "implicitDependencies": Object {
    ".eslintrc.json": "*",
    "package.json": Object {
      "dependencies": "*",
      "devDependencies": "*",
    },
  },
  "npmScope": "my-scope",
  "targetDependencies": Object {
    "build": Array [
      Object {
        "projects": "dependencies",
        "target": "build",
      },
    ],
  },
  "tasksRunnerOptions": Object {
    "default": Object {
      "options": Object {
        "cacheableOperations": Array [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
  "workspaceLayout": Object {
    "appsDir": "",
    "libsDir": "",
  },
}
`;

exports[`workspace --preserve-angular-cli-layout should support multiple projects 1`] = `
Object {
  "affected": Object {
    "defaultBase": "main",
  },
  "implicitDependencies": Object {
    ".eslintrc.json": "*",
    "package.json": Object {
      "dependencies": "*",
      "devDependencies": "*",
    },
  },
  "npmScope": "my-scope",
  "targetDependencies": Object {
    "build": Array [
      Object {
        "projects": "dependencies",
        "target": "build",
      },
    ],
  },
  "tasksRunnerOptions": Object {
    "default": Object {
      "options": Object {
        "cacheableOperations": Array [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
  "workspaceLayout": Object {
    "appsDir": "projects",
    "libsDir": "projects",
  },
}
`;

exports[`workspace move to nx layout cypress should handle project configuration without cypress-run or cypress-open 1`] = `
Object {
  "implicitDependencies": Array [
    "myApp",
  ],
  "projectType": "application",
  "root": "apps/myApp-e2e",
  "sourceRoot": "apps/myApp-e2e/src",
  "tags": Array [],
  "targets": Object {
    "e2e": Object {
      "configurations": Object {
        "production": Object {
          "devServerTarget": "ng-cypress:serve:production",
        },
      },
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "apps/myApp-e2e/cypress.json",
        "devServerTarget": "ng-cypress:serve",
        "watch": true,
      },
    },
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "apps/myApp-e2e/**/*.{js,ts}",
        ],
      },
      "outputs": Array [
        "{options.outputFile}",
      ],
    },
  },
}
`;

exports[`workspace move to nx layout cypress should migrate e2e tests correctly 1`] = `
Object {
  "compilerOptions": Object {
    "outDir": "../../dist/out-tsc",
  },
  "extends": "../../tsconfig.base.json",
}
`;

exports[`workspace move to nx layout cypress should migrate e2e tests correctly 2`] = `
Object {
  "baseUrl": "http://localhost:4200",
  "fileServerFolder": ".",
  "fixturesFolder": "./src/fixtures",
  "integrationFolder": "./src/integration",
  "pluginsFile": "./src/plugins/index.ts",
  "screenshotsFolder": "../../dist/cypress/apps/myApp-e2e/screenshots",
  "supportFile": "./src/support/index.ts",
  "videosFolder": "../../dist/cypress/apps/myApp-e2e/videos",
}
`;

exports[`workspace move to nx layout cypress should migrate e2e tests correctly 3`] = `
Object {
  "extends": Array [
    "plugin:cypress/recommended",
    "../../.eslintrc.json",
  ],
  "ignorePatterns": Array [
    "!**/*",
  ],
  "overrides": Array [
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx",
      ],
      "rules": Object {},
    },
  ],
}
`;

exports[`workspace move to nx layout cypress should migrate e2e tests correctly 4`] = `
Object {
  "implicitDependencies": Array [
    "myApp",
  ],
  "projectType": "application",
  "root": "apps/myApp-e2e",
  "sourceRoot": "apps/myApp-e2e/src",
  "tags": Array [],
  "targets": Object {
    "cypress-open": Object {
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "apps/myApp-e2e/cypress.json",
        "watch": true,
      },
    },
    "cypress-run": Object {
      "configurations": Object {
        "production": Object {
          "devServerTarget": "ng-cypress:serve:production",
        },
      },
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "apps/myApp-e2e/cypress.json",
        "devServerTarget": "ng-cypress:serve",
      },
    },
    "e2e": Object {
      "configurations": Object {
        "production": Object {
          "devServerTarget": "ng-cypress:serve:production",
        },
      },
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "apps/myApp-e2e/cypress.json",
        "devServerTarget": "ng-cypress:serve",
        "watch": true,
      },
    },
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "apps/myApp-e2e/**/*.{js,ts}",
        ],
      },
      "outputs": Array [
        "{options.outputFile}",
      ],
    },
  },
}
`;

exports[`workspace move to nx layout cypress should migrate e2e tests when configFile is set to false and there is no cypress.json 1`] = `
Object {
  "chromeWebSecurity": false,
  "fileServerFolder": ".",
  "fixturesFolder": "./src/fixtures",
  "integrationFolder": "./src/integration",
  "modifyObstructiveCode": false,
  "pluginsFile": "./src/plugins/index.ts",
  "screenshotsFolder": "../../dist/cypress/apps/myApp-e2e/screenshots",
  "supportFile": "./src/support/index.ts",
  "video": true,
  "videosFolder": "../../dist/cypress/apps/myApp-e2e/videos",
}
`;

exports[`workspace move to nx layout cypress should migrate e2e tests when configFile is set to false and there is no cypress.json 2`] = `
Object {
  "implicitDependencies": Array [
    "myApp",
  ],
  "projectType": "application",
  "root": "apps/myApp-e2e",
  "sourceRoot": "apps/myApp-e2e/src",
  "tags": Array [],
  "targets": Object {
    "cypress-open": Object {
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "apps/myApp-e2e/cypress.json",
        "watch": true,
      },
    },
    "cypress-run": Object {
      "configurations": Object {
        "production": Object {
          "devServerTarget": "ng-cypress:serve:production",
        },
      },
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "apps/myApp-e2e/cypress.json",
        "devServerTarget": "ng-cypress:serve",
      },
    },
    "e2e": Object {
      "configurations": Object {
        "production": Object {
          "devServerTarget": "ng-cypress:serve:production",
        },
      },
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "apps/myApp-e2e/cypress.json",
        "devServerTarget": "ng-cypress:serve",
        "watch": true,
      },
    },
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "apps/myApp-e2e/**/*.{js,ts}",
        ],
      },
      "outputs": Array [
        "{options.outputFile}",
      ],
    },
  },
}
`;

exports[`workspace move to nx layout should create a root eslint config 1`] = `
Object {
  "ignorePatterns": Array [
    "**/*",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
      ],
      "files": Array [
        "*.ts",
      ],
      "parserOptions": Object {
        "createDefaultProgram": true,
      },
      "rules": Object {
        "@angular-eslint/component-selector": Array [
          "error",
          Object {
            "prefix": "app",
            "style": "kebab-case",
            "type": "element",
          },
        ],
        "@angular-eslint/directive-selector": Array [
          "error",
          Object {
            "prefix": "app",
            "style": "camelCase",
            "type": "attribute",
          },
        ],
      },
    },
    Object {
      "extends": Array [
        "plugin:@angular-eslint/template/recommended",
      ],
      "files": Array [
        "*.html",
      ],
      "rules": Object {},
    },
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx",
      ],
      "rules": Object {
        "@nrwl/nx/enforce-module-boundaries": Array [
          "error",
          Object {
            "allow": Array [],
            "depConstraints": Array [
              Object {
                "onlyDependOnLibsWithTags": Array [
                  "*",
                ],
                "sourceTag": "*",
              },
            ],
            "enforceBuildableLibDependency": true,
          },
        ],
      },
    },
  ],
  "plugins": Array [
    "@nrwl/nx",
  ],
  "root": true,
}
`;

exports[`workspace move to nx layout should create nx.json 1`] = `
Object {
  "affected": Object {
    "defaultBase": "main",
  },
  "cli": Object {
    "defaultCollection": "@nrwl/angular",
  },
  "defaultProject": "myApp",
  "implicitDependencies": Object {
    ".eslintrc.json": "*",
    "package.json": Object {
      "dependencies": "*",
      "devDependencies": "*",
    },
  },
  "npmScope": "my-org",
  "targetDependencies": Object {
    "build": Array [
      Object {
        "projects": "dependencies",
        "target": "build",
      },
    ],
  },
  "tasksRunnerOptions": Object {
    "default": Object {
      "options": Object {
        "cacheableOperations": Array [
          "build",
          "lint",
          "test",
          "e2e",
        ],
      },
      "runner": "nx/tasks-runners/default",
    },
  },
}
`;

exports[`workspace move to nx layout should move the project eslint config 1`] = `
Object {
  "extends": "../../.eslintrc.json",
  "ignorePatterns": Array [
    "!**/*",
  ],
  "overrides": Array [
    Object {
      "extends": Array [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
      ],
      "files": Array [
        "*.ts",
      ],
      "parserOptions": Object {
        "createDefaultProgram": true,
        "project": Array [
          "apps/myApp/tsconfig.*?.json",
        ],
      },
      "rules": Object {
        "@angular-eslint/component-selector": Array [
          "error",
          Object {
            "prefix": "app",
            "style": "kebab-case",
            "type": "element",
          },
        ],
        "@angular-eslint/directive-selector": Array [
          "error",
          Object {
            "prefix": "app",
            "style": "camelCase",
            "type": "attribute",
          },
        ],
      },
    },
    Object {
      "extends": Array [
        "plugin:@angular-eslint/template/recommended",
      ],
      "files": Array [
        "*.html",
      ],
      "rules": Object {},
    },
  ],
}
`;

exports[`workspace move to nx layout should update project configuration 1`] = `
Object {
  "root": "apps/myApp",
  "sourceRoot": "apps/myApp/src",
  "targets": Object {
    "build": Object {
      "configurations": Object {},
      "options": Object {
        "tsConfig": "apps/myApp/tsconfig.app.json",
      },
    },
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "apps/myApp/src/**/*.ts",
          "apps/myApp/src/**/*.html",
        ],
      },
    },
    "test": Object {
      "options": Object {
        "karmaConfig": "apps/myApp/karma.conf.js",
        "tsConfig": "apps/myApp/tsconfig.spec.json",
      },
    },
  },
}
`;

exports[`workspace move to nx layout should update tsconfig.base.json if present 1`] = `
Object {
  "compilerOptions": Object {
    "baseUrl": ".",
    "paths": Object {},
    "rootDir": ".",
  },
  "exclude": Array [
    "node_modules",
    "tmp",
  ],
}
`;

exports[`workspace move to nx layout should work if angular-cli workspace had tsconfig.base.json 1`] = `
Object {
  "compilerOptions": Object {
    "baseUrl": ".",
    "paths": Object {},
    "rootDir": ".",
  },
  "exclude": Array [
    "node_modules",
    "tmp",
  ],
}
`;
