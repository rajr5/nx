name: <%= workflowName %>

trigger:
  - <%= mainBranch %>
pr:
  - <%= mainBranch %>

variables:
  - name: NX_CLOUD_DISTRIBUTED_EXECUTION
    value: 'true'
  - name: NX_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(System.PullRequest.PullRequestNumber)
    ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
      value: $(Build.SourceBranchName)
  - name: TARGET_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $[replace(variables['System.PullRequest.TargetBranch'],'refs/heads/','origin/')]
  - name: BASE_SHA
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(git merge-base $(TARGET_BRANCH) HEAD)
    ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
      value: $(git rev-parse HEAD~1)
  - name: HEAD_SHA
    value: $(git rev-parse HEAD)

jobs:
  - job: agents
    strategy:
      parallel: 3
    displayName: 'Nx Cloud Agent'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      <% if(packageManagerPrefix == 'pnpm exec'){ %>
      - script: npm install --prefix=$HOME/.local -g pnpm@6.32.4
        displayName: Install PNPM
      <% } %>- script: <%= packageManagerInstall %>
        displayName: NPM Install Dependencies
      - script: npx nx-cloud start-agent
        displayName: 'Start Nx-Cloud agent

  - job: main
    displayName: 'Nx Cloud Main'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      <% if(packageManagerPrefix == 'pnpm exec'){ %>
      - script: npm install --prefix=$HOME/.local -g pnpm@6.32.4
        displayName: Install PNPM
      <% } %>- script: <%= packageManagerInstall %>
        displayName: NPM Install Dependencies
      - script: <%= packageManagerPrefix %> nx-cloud start-ci-run
        displayName: Start CI run
      - script: <%= packageManagerPrefix %> nx workspace-lint
        displayName: Run workspace lint
      - script: <%= packageManagerPrefix %> nx format:check --base=$(BASE_SHA) --head=$(HEAD_SHA)
        displayName: Check format
      - script: <%= packageManagerPrefix %> nx affected --base=$(BASE_SHA) --head=$(HEAD_SHA) --target=lint --parallel=3
        displayName: Run lint
      - script: <%= packageManagerPrefix %> nx affected --base=$(BASE_SHA) --head=$(HEAD_SHA) --target=test --parallel=3 --ci --code-coverage
        displayName: Run test
      - script: <%= packageManagerPrefix %> nx affected --base=$(BASE_SHA) --head=$(HEAD_SHA) --target=build --parallel=3
        displayName: Run build
      - script: <%= packageManagerPrefix %> nx-cloud stop-all-agents
        condition: always()
        displayName: Stop all Nx-Cloud agents
